@prefix ex: <http://example.org/> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix test: <https://w3c.github.io/N3/tests/test.n3#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix : <string1.n3#>.

<#> rdfs:comment "Tests for string builtins" .

{ "HeLlo WoRlD" string:matches "/hello/i" } => { :string1 a :SUCCESS } .
{ "HeLlo WoRlD" string:matches "/hello/" } => { :string2 a :FAILURE } .
{ "hello world" string:matches "/^hello.*?$/" } => { :string3 a :SUCCESS } .
{ "hello world" string:notMatches "/blah/" } => { :string4 a :SUCCESS } .

{ ("blah" "bloeh" "blieh") string:concatenation ?s } => { :string5 :has ?s } .
{ ("me" "mi" "ma" "mo") string:concatenation "memimamo" } => { :string6 a :SUCCESS } .
{ ("me" "mi" "ma" "mo") string:concatenation "momimame" } => { :string7 a :FAILURE } .
{ ("me" ?x "ma" "mo") string:concatenation ?s } => { :string8 :has ?s } .
{ ("me" 2 "ma" 1e10) string:concatenation ?s } => { :string9 :has ?s } .
{ ("a" ?s "c") string:concatenation "abc" } => { :string22 :has ?s } .

{ "hello" string:length 5 } => { :string10 a :SUCCESS } .
{ "hello" string:length "5" } => { :string11 a :SUCCESS } .
{ "hello" string:length ?l } => { :string12 :has ?l } .
{ ?s string:length ?l } => { :string13 :has ?l } .
{ ?s string:length 1.3 } => { :string14 a :FAILURE } .

{ ("HELLO world" "/(.*)ll.*/i") string:scrape ?s . (?s "y!") string:concatenation ?s2 . ?s2 string:lowerCase ?s3 } => { :string15 :has ?s3 } .
{ ("/(.*)ll.*/i" "hello world") string:scrape ?s } => { :string16 a :FAILURE } .
{ ("hello world" "/(.*)ll.*/i") string:scrape ?s } => { :string21 :has ?s } .


{ ( "will will work" "/\\swill\\s/" " will not " ) string:replace ?s . ?s string:upperCase ?s2 } => { :string17 :has ?s2 } .
{ ( "william" "/will([^\\s]*)/" ) string:scrape ?s } => { :string18 :has ?s } .

{ ("william" 4 ?l) string:substring ?sent1 } => { :string19 :has ?sent1 } .
{ ("william" 0 4) string:substring ?sent2 } => { :string20 :has ?sent2 } .