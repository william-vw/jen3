@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix list: <http://www.w3.org/2000/10/swap/list#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix : <https://raw.githubusercontent.com/w3c/N3/master/tests/N3Tests/builtin3.n3#> .

<#> rdfs:comment "Tests for 'getter builtins' - i.e., log:content, log:semantics(OrError)" .

:out rdf:value """@prefix : <builtin3.n3#> .
@base <http://example.org/> .

:will :hasAge 36 .
"""^^<http://www.w3.org/2001/XMLSchema#string> .

# due to different line breaks, cannot check directly here (\r\n vs. \n)
{ <https://raw.githubusercontent.com/w3c/N3/master/tests/N3Tests/quick_test.n3> log:content ?c } => { :test1 a :SUCCESS } .

{ 	<https://raw.githubusercontent.com/w3c/N3/master/tests/N3Tests/quick_test.n3> log:content ?o1 . ?x rdf:value ?o2 . 
	(?o1 "/\r?\n/" " ") string:replace ?o1r . (?o2 "/\r?\n/" " ") string:replace ?o2r . ?o1r log:equalTo ?o2r
	
} => { :test2 a :SUCCESS } .

:x :blah "@prefix : <https://raw.githubusercontent.com/w3c/N3/master/tests/N3Tests/builtin3.n3#> . { :k :l :m } a :Thing ." .

{ ?x :blah ?s . ?s log:parsedAsN3 ?f } => { :test4 :has ?f } .

{ <https://raw.githubusercontent.com/w3c/N3/master/tests/N3Tests/quick_test.n3> log:semantics ?f } => { :test5 :has ?f } .

{ <https://raw.githubusercontent.com/w3c/N3/master/tests/N3Tests/quick_test_fail.n3> log:semantics ?f } => { :test6 :has ?f } .

{ <https://raw.githubusercontent.com/w3c/N3/master/tests/N3Tests/quick_test_fail.n3> log:semanticsOrError ?f } => { :test7 :has ?f } .

{ <https://raw.githubusercontent.com/w3c/N3/master/tests/N3Tests/quick_test_failll.n3> log:semanticsOrError ?f } => { :test8 :has ?f } .

{ <https://raw.githubusercontent.com/w3c/N3/master/tests/N3Tests/quick_test.n3> log:semanticsOrError ?f } => { :test9 :has ?f } .